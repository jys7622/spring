<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:mvc="http://www.springframework.org/schema/mvc"
	 xmlns:task="http://www.springframework.org/schema/task"
	 xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<task:scheduled-tasks>
		<task:scheduled ref="daumNewsScheduler" method="scrawal" cron="30 * * * * *"/>
	</task:scheduled-tasks>

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
<!--	<mvc:annotation-driven />-->




	<!-- 순서 제일 중요 -->
	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<beans:bean class="com.system.blog.config.LoginUserArgumentResolver"/>
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/blog/**" location="/blog/" />

	<context:property-placeholder location="classpath:application.properties"/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<!--       HandlerAdapter 사용자의 요청에 부합하는 Controller 의 method 실행-->
		<beans:property name="messageConverters">
			<beans:list>
				<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<beans:property name="supportedMediaTypes">
						<beans:list>
							<beans:value>text/html;charset=UTF-8</beans:value>
							<beans:value>application/json;charset=UTF-8</beans:value>
						</beans:list>
					</beans:property>
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="5242880000" />
		<beans:property name="maxInMemorySize" value="100000000" />
	</beans:bean>

	<context:component-scan base-package="com.system.blog" />

	<mvc:interceptors>
		<mvc:interceptor>
			<mapping path="/**"/>
			<beans:bean class="com.system.blog.config.CommonInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

<!--	<beans:bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>-->
<!--	<beans:bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>-->
</beans:beans>